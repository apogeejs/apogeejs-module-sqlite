{"fileType":"apogee app js workspace","version":"0.60","references":{"refEntries":[{"url":"apogeejs-module-sqlite","nickname":"apogeejs-module-sqlite","entryType":"npm module"}],"viewState":{"treeState":1,"lists":{"npm module":{"treeState":1}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"SqliteTest","children":{"main":{"name":"main","type":"apogee.Folder","children":{"test1":{"name":"test1","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"createTableData.dbPath","pathType":"simple","queryType":"run","sql":"createTableData.sql","sqlType":"simple","params":"","parameterType":"value","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = createTableData.dbPath\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"run\"\noutput[\"sql\"] = createTableData.sql\noutput[\"sqlType\"] = \"simple\"\noutput[\"params\"] = \"\"\noutput[\"parameterType\"] = \"value\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}},"dbFileForm":{"name":"dbFileForm","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"data":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":"C:\\Dave\\dev\\github\\apogeejs-repos\\apogeejs-module-sqlite\\test2.db"}}}},"tableInfoForm":{"name":"tableInfoForm","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"data":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":{"tableName":"user","column":[{"columnName":"user_name","dataType":"TEXT","columnConstraints":["NOT NULL","UNIQUE"],"foreignKey":false,"defaultValue":""},{"columnName":"email","dataType":"TEXT","columnConstraints":["NOT NULL","UNIQUE"],"foreignKey":false,"defaultValue":""},{"columnName":"password_hash","dataType":"TEXT","columnConstraints":["NOT NULL"],"foreignKey":false,"defaultValue":""}]}}}}},"createTableSql":{"name":"createTableSql","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let tableInfo = tableInfoForm.value;\nlet tableLine = \"CREATE TABLE \" + tableInfo.tableName + \" (\\n\";\n\nlet tableConstraints = [];\nlet columnLines = tableInfo.column.map( (columnInfo,index) => {\n    let columnText = \"\\t\" + columnInfo.columnName + \" \"  + columnInfo.dataType;\n    let constraintText = columnInfo.columnConstraints.join(\" \");\n    if(constraintText.length > 0) {\n        columnText += \" \" + constraintText;\n    }\n    if(index < tableInfo.column.length-1) {\n        columnText += \",\";\n    }\n    return columnText;\n})\n\nlet tableText = tableLine + columnLines.join(\"\\n\") + \"\\n);\";\n\nreturn tableText;\n\n\n","supplementalCode":""}},"onceCellForm":{"name":"onceCellForm","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return  {\n    dbPath: dbFileForm.value,\n    sql: createTableSql\n}","supplementalCode":""}},"createTableData":{"name":"createTableData","type":"apogee.JsonMember","updateData":{"data":""}},"test2":{"name":"test2","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"dbFileForm.value","pathType":"simple","queryType":"all","sql":"/* select rowid from user; */\nselect * from user;","sqlType":"value","params":"","parameterType":"value","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = dbFileForm.value\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"all\"\noutput[\"sql\"] = \"/* select rowid from user; */\\nselect * from user;\"\noutput[\"sqlType\"] = \"value\"\noutput[\"params\"] = \"\"\noutput[\"parameterType\"] = \"value\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}},"test3":{"name":"test3","type":"apogee.Folder","children":{"formData":{"name":"formData","type":"apogee.JsonMember","updateData":{"data":{"dbPath":"dbFileForm.value","pathType":"simple","queryType":"run","sql":"insert into user (user_name,email,password_hash,phone) values ('sutter','sutter@intransix.com','xxx','8675309');","sqlType":"value","params":"","parameterType":"value","cached":false,"openType":"readwrite","verbose":true,"createIfMissing":false}}},"formResult":{"name":"formResult","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"dbPath\"] = dbFileForm.value\noutput[\"pathType\"] = \"simple\"\noutput[\"queryType\"] = \"run\"\noutput[\"sql\"] = \"insert into user (user_name,email,password_hash,phone) values ('sutter','sutter@intransix.com','xxx','8675309');\"\noutput[\"sqlType\"] = \"value\"\noutput[\"params\"] = \"\"\noutput[\"parameterType\"] = \"value\"\noutput[\"cached\"] = false\noutput[\"openType\"] = \"readwrite\"\noutput[\"verbose\"] = true\noutput[\"createIfMissing\"] = false\nreturn output;","supplementalCode":"","contextParentGeneration":2}},"data":{"name":"data","type":"apogee.SqliteQueryMember"}}}}},"createDatabaseFile":{"name":"createDatabaseFile","type":"apogee.Folder","children":{"parentFolderForm":{"name":"parentFolderForm","type":"apogee.Folder","children":{"input":{"name":"input","type":"apogee.JsonMember","updateData":{"data":""}},"value":{"name":"value","type":"apogee.JsonMember","updateData":{"data":"C:\\Dave\\dev\\github\\apogeejs-repos\\apogeejs-module-sqlite"}}},"childrenNotWriteable":true},"createDbFileForm":{"name":"createDbFileForm","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    parentFolder: parentFolderForm.value\n}","supplementalCode":""}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Create Database Table"}]},{"type":"heading2","content":[{"type":"text","text":"Database File"}]},{"type":"paragraph","content":[{"type":"text","text":"Select the working database file."}]},{"type":"apogeeComponent","attrs":{"name":"dbFileForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Create Table"}]},{"type":"paragraph","content":[{"type":"text","text":"The following form can be used to enter table info to create the SQL."}]},{"type":"apogeeComponent","attrs":{"name":"tableInfoForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following cell constructs the create table SQL from the above form."}]},{"type":"apogeeComponent","attrs":{"name":"createTableSql","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Create Table Command"}]},{"type":"paragraph","content":[{"type":"text","text":"The follow form can be used to create the table."}]},{"type":"paragraph","content":[{"type":"text","text":"This is a little cludgy. One buttons populates a table that is used as input for the SQL command execution. This is one method of running something "},{"type":"text","marks":[{"type":"italic"}],"text":"once"},{"type":"text","text":". It shields the subsequent dependent cells from any changes to the data other than what you input by pressing the button."}]},{"type":"paragraph","content":[{"type":"text","text":"There is also a button to clear the table. Here clearing this cell will also make the subsequent cells not execute."}]},{"type":"paragraph","content":[{"type":"text","text":"We should probably get a better mechanism here, such as a SQLite cell that has a execute command."}]},{"type":"apogeeComponent","attrs":{"name":"onceCellForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the input that our create action will depend on."}]},{"type":"apogeeComponent","attrs":{"name":"createTableData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This form executes the command in the createTableData cell immediately."}]},{"type":"apogeeComponent","attrs":{"name":"test1","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Testing Cells"}]},{"type":"heading3","content":[{"type":"text","text":"Query Table"}]},{"type":"apogeeComponent","attrs":{"name":"test2","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Insert Table Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This can be used to insert data. The following is an insert statement we can use."}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Monospace"}}],"text":"insert into user (user_name,email,password_hash) values ('sutter','sutter@intransix.com','xxx');"}]},{"type":"apogeeComponent","attrs":{"name":"test3","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"test1":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"isViewActive":true,"height":280},"Input":{"isViewActive":true}}}}},"dbFileForm":{"type":"apogeeapp.NewDataFormCell","layoutCode":"let onSubmit = () => {\n    var {dialog} = require('electron').remote;\n\n    let pathPromise = dialog.showOpenDialog({properties: ['openFile']})\n        .then( fileOpenResult => {\n            if(fileOpenResult.canceled) {\n                //canceled - no action\n                return;\n            }\n        \telse if(fileOpenResult.filePaths.length === 1) {\n        \t    commandMessenger.dataCommand(\"dbFileForm.value\",fileOpenResult.filePaths[0]);\n        \t}\n        \telse if(fileOpenResult.filePaths.length > 1) {\n        \t    apogeeUserAlert(\"Multiple file selection not supported!\");\n        \t}\n        \telse {\n        \t    //canceled - no action\n        \t\tapogeeUserAlert(\"Unknown error: no path selected\");\n        \t}\n        })\n        .catch(err => {\n        \tapogeeUserAlert(\"Error getting DB path: \" + err.toString());\n        });\n}\n\nreturn [\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Select DB File\"\n    }    \n]","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"height":7000,"isViewActive":false},"validator":{"isViewActive":false,"height":7000},"input":{"isViewActive":false,"height":7000},"inputPrivate":{"isViewActive":false,"height":7000},"value":{"isViewActive":true,"height":280}}}}},"tableInfoForm":{"type":"apogeeapp.NewDataFormCell","layoutCode":"return [\n\t{\n\t\t\"type\": \"textField\",\n\t\t\"label\": \"Table Name: \",\n\t\t\"key\": \"tableName\"\n\t},\n\t{\n\t\t\"type\": \"list\",\n\t\t\"label\": \"Columns\",\n\t\t\"key\": \"column\",\n\t\t\"entryType\": {\n\t\t\t\"layout\": {\n\t\t\t\t\"type\": \"panel\",\n\t\t\t\t\"formData\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"textField\",\n\t\t\t\t\t\t\"label\": \"Column Name: \",\n\t\t\t\t\t\t\"key\": \"columnName\",\n\t\t\t\t\t\t\"hint\": \"required\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\"label\": \"Data Type: \",\n\t\t\t\t\t\t\"entries\": [\n\t\t\t\t\t\t\t\"INTEGER\",\n\t\t\t\t\t\t\t\"REAL\",\n\t\t\t\t\t\t\t\"TEXT\",\n\t\t\t\t\t\t\t\"BLOB\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"key\": \"dataType\",\n\t\t\t\t\t\t\"hint\": \"required\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkboxGroup\",\n\t\t\t\t\t\t\"label\": \"Column Constraints: \",\n\t\t\t\t\t\t\"entries\": [\n\t\t\t\t\t\t\t\"NOT NULL\",\n\t\t\t\t\t\t\t\"UNIQUE\",\n\t\t\t\t\t\t\t\"PRIMARY KEY\",\n\t\t\t\t\t\t\t\"AUTOINCREMENT\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"key\": \"columnConstraints\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"horizontalLayout\",\n\t\t\t\t\t\t\"formData\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\t\"label\": \"Foreign Key\",\n\t\t\t\t\t\t\t\t\"key\": \"foreignKey\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"textField\",\n\t\t\t\t\t\t\t\t\"label\": \"Remote Table: \",\n\t\t\t\t\t\t\t\t\"key\": \"remoteTable\",\n\t\t\t\t\t\t\t\t\"selector\": {\n\t\t\t\t\t\t\t\t\t\"parentKey\": \"foreignKey\",\n\t\t\t\t\t\t\t\t\t\"parentValue\": true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"textField\",\n\t\t\t\t\t\t\t\t\"label\": \"Remote Column: \",\n\t\t\t\t\t\t\t\t\"key\": \"remoteColumn\",\n\t\t\t\t\t\t\t\t\"selector\": {\n\t\t\t\t\t\t\t\t\t\"parentKey\": \"foreignKey\",\n\t\t\t\t\t\t\t\t\t\"parentValue\": true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"textField\",\n\t\t\t\t\t\t\"label\": \"Default Value: \",\n\t\t\t\t\t\t\"key\": \"defaultValue\",\n\t\t\t\t\t\t\"hint\": \"optional\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"key\": \"columnEntry\"\n\t\t\t}\n\t\t}\n\t}\n]","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"height":7000,"isViewActive":false},"validator":{"isViewActive":false},"input":{"isViewActive":false},"inputPrivate":{"height":7000,"isViewActive":false},"value":{"isViewActive":false,"height":280}}}}},"createTableSql":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"onceCellForm":{"type":"apogeeapp.NewActionFormCell","layoutCode":"let onCreate = () => {\n    \n    commandMessenger.dataCommand(\"createTableData\",inputData);\n}\nlet onClear = () => {\n    commandMessenger.dataCommand(\"createTableData\",\"\");\n}\nreturn [\n    {\n        type: \"submit\",\n        onSubmit: onCreate,\n        onCancel: onClear,\n        submitLabel: \"Create Table\",\n        cancelLabel: \"Clear SQL for Statement\"\n    }\n]","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"isViewActive":false,"height":7000},"input":{"isViewActive":true,"height":7000},"inputPrivate":{"isViewActive":false}}}}},"createTableData":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"test2":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"isViewActive":true,"height":280},"Input":{"isViewActive":true}}}}},"test3":{"type":"apogeeapp.SqliteQueryCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"Result":{"isViewActive":true,"height":280},"Input":{"isViewActive":true}}}}}},"viewState":{"treeState":1,"tabOpened":true}},"createDatabaseFile":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Create Database File"}]},{"type":"heading2","content":[{"type":"text","text":"Select Parent Folder"}]},{"type":"paragraph","content":[{"type":"text","text":"Use this for to select the parent folder for the new DB file."}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"},{"type":"textcolor","attrs":{"color":"red"}}],"text":"???: Why did I use a data form here when I have a submit button. Why not an action form that points to another external cell??"}]},{"type":"apogeeComponent","attrs":{"name":"parentFolderForm","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Create File"}]},{"type":"paragraph","content":[{"type":"text","text":"Enter the file name and press \"Create\" to create a new, empty database file."}]},{"type":"apogeeComponent","attrs":{"name":"createDbFileForm","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"parentFolderForm":{"type":"apogeeapp.NewDataFormCell","layoutCode":"let onSubmit = () => {\n    var {dialog} = require('electron').remote;\n\n    let pathPromise = dialog.showOpenDialog({properties: ['openDirectory']})\n        .then( fileOpenResult => {\n            if(fileOpenResult.canceled) {\n                //canceled - no action\n                return;\n            }\n        \telse if(fileOpenResult.filePaths.length === 1) {\n        \t    commandMessenger.dataCommand(\"parentFolderForm.value\",fileOpenResult.filePaths[0]);\n        \t}\n        \telse if(fileOpenResult.filePaths.length > 1) {\n        \t    apogeeUserAlert(\"Multiple file selection not supported!\");\n        \t}\n        \telse {\n        \t    //canceled - no action\n        \t\tapogeeUserAlert(\"Unknown error: no path selected\");\n        \t}\n        })\n        .catch(err => {\n        \tapogeeUserAlert(\"Error getting DB path: \" + err.toString());\n        });\n}\n\nreturn [\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Select Folder\"\n    }    \n]","validatorCode":"return true","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"height":7000,"isViewActive":true},"validator":{"isViewActive":false},"input":{"isViewActive":false},"inputPrivate":{"isViewActive":false},"value":{"isViewActive":true,"height":280}}}}},"createDbFileForm":{"type":"apogeeapp.NewActionFormCell","layoutCode":"let onSubmit = formValue => {\r\n    __customControlDebugHook();\r\n    if(!formValue.fileName) {\r\n        apogeeUserAlert(\"File name is not set!\");\r\n        return;\r\n    }\r\n    if(!inputData.parentFolder) {\r\n        apogeeUserAlert(\"Parent folder is not set!\");\r\n        return;\r\n    }\r\n    try {\r\n        let path = require(\"path\");\r\n        let dbPath = path.join(inputData.parentFolder,formValue.fileName);\r\n        \r\n        var fs = require('fs');\r\n    \r\n        //load file if it exists\r\n        if(fs.existsSync(dbPath)) {\r\n            apogeeUserAlert(\"The file name already exists. New database file NOT created.\");\r\n            return;\r\n        }\r\n        else {\r\n            let sqlite3 = require(\"sqlite3\");\r\n            let connection = new sqlite3.cached.Database(dbPath);\r\n            apogeeUserAlert(\"New empty database file created: \" + dbPath);\r\n            connection.close();\r\n        }\r\n    }\r\n    catch(error) {\r\n        if(error.stack) console.error(error.stack);\r\n        apogeeUserAlert(error.toString());\r\n    }\r\n}\r\n\r\nreturn [\r\n    {\r\n        type: \"textField\",\r\n        label: \"DB File Name: \",\r\n        key: \"fileName\"\r\n    },\r\n    {\r\n        type: \"submit\",\r\n        onSubmit: onSubmit,\r\n        submitLabel: \"Create\"\r\n    }\r\n]\r\n\r\n\r\n","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":true},"form":{"isViewActive":true},"layout":{"isViewActive":false,"height":7000},"input":{"isViewActive":false,"height":7000},"inputPrivate":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}